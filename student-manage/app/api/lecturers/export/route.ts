import { NextResponse } from "next/server";
import { prisma } from "@/lib/prisma";
import ExcelJS from "exceljs";

export async function GET() {
  try {
    // üü© 1. L·∫•y danh s√°ch gi·∫£ng vi√™n t·ª´ DB (s·∫Øp x·∫øp theo ID tƒÉng d·∫ßn)
    const lecturers = await prisma.lecturers.findMany({
      include: { departments: true },
      orderBy: { lecturer_id: "asc" },
    });

    // üü© 2. T·∫°o workbook & worksheet
    const workbook = new ExcelJS.Workbook();
    const sheet = workbook.addWorksheet("Danh s√°ch Gi·∫£ng vi√™n");

    // üü© 3. ƒê·ªãnh nghƒ©a header c·ªôt
    sheet.columns = [
      { header: "ID", key: "lecturer_id", width: 10 },
      { header: "H·ªç", key: "last_name", width: 20 },
      { header: "T√™n", key: "first_name", width: 20 },
      { header: "M√£ GV", key: "lecturer_code", width: 15 },
      { header: "Gi·ªõi t√≠nh", key: "gender", width: 12 },
      { header: "Ng√†y sinh", key: "dob", width: 15 },
      { header: "S·ªë ƒëi·ªán tho·∫°i", key: "phone", width: 15 },
      { header: "Email", key: "email", width: 25 },
      { header: "ƒê·ªãa ch·ªâ", key: "address", width: 40 },
      { header: "Ch·ª©c v·ª•", key: "position", width: 20 },
      { header: "Khoa", key: "department_name", width: 30 },
    ];

    // üü© 4. Th√™m d·ªØ li·ªáu v√†o b·∫£ng
    lecturers.forEach((lecturer) => {
      sheet.addRow({
        ...lecturer,
        department_name: lecturer.departments?.department_name ?? "",
      });
    });

    // üü© 5. Format header (in ƒë·∫≠m, canh gi·ªØa, n·ªÅn x√°m nh·∫°t)
    const headerRow = sheet.getRow(1);
    headerRow.font = { bold: true, color: { argb: "FF000000" } };
    headerRow.alignment = { horizontal: "center", vertical: "middle" };
    headerRow.fill = {
      type: "pattern",
      pattern: "solid",
      fgColor: { argb: "FFD9D9D9" },
    };

    // üü© 6. Th√™m border cho to√†n b·ªô b·∫£ng
    sheet.eachRow((row) => {
      row.eachCell((cell) => {
        cell.border = {
          top: { style: "thin", color: { argb: "FFCCCCCC" } },
          left: { style: "thin", color: { argb: "FFCCCCCC" } },
          bottom: { style: "thin", color: { argb: "FFCCCCCC" } },
          right: { style: "thin", color: { argb: "FFCCCCCC" } },
        };
      });
    });

    // üü© 7. Xu·∫•t ra file Excel
    const buffer = await workbook.xlsx.writeBuffer();

    return new NextResponse(buffer, {
      headers: {
        "Content-Type":
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
        "Content-Disposition": 'attachment; filename="lecturers.xlsx"',
      },
    });
  } catch (error) {
    console.error("‚ùå Export failed:", error);
    return NextResponse.json({ error: "Export failed" }, { status: 500 });
  }
}
